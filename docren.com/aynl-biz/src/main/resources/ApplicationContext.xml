<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
       default-autowire="byName" default-lazy-init="false">



    <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean"/>

    <bean id="wexinJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="group" value="wexinJob_group"/>
        <property name="name" value="wexinJobGrant"/>
        <property name="jobClass" value="apc.dubbo.mypharma.bizService.report.jobs.job.WechatJob"/>
        <property name="jobDataAsMap">
            <map>
                <entry key="StartTime" value="1461859200"/>
                <entry key="EndTime" value="1461945600"/>
                <entry key="Offset" value="3600"/>
            </map>
        </property>
    </bean>

    <!--业务JOB配置结束-->


    <!--任务触发器配置开始-->

    <bean id="wechatCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="wexinJob"></ref>
        </property>
        <property name="cronExpression">
            <value>0 00 18 * * ?</value>
        </property>
    </bean>
    <!--任务触发器配置结束-->

    <!--全局监听器配置-->
    <bean id="mySchedulerListener"
          class="docren.com.utils.util.quartz.GloabSchedulerListener"></bean>
    <bean id="myTriggerListener"
          class="docren.com.utils.util.quartz.GloabTriggerListener"></bean>
    <bean id="myJobListener" class="docren.com.utils.util.quartz.GloabJobListener"></bean>

    <!-- 启动触发器的配置 -->
    <bean name="startQuertz" lazy-init="false" autowire="no"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <!-- 在SchedulerFactoryBean初始化完成后，延迟3秒启动Scheduler，以便让Spring能够更快初始化容器中剩余的Bean。-->
        <property name="startupDelay" value="0"/>
        <property name="applicationContextSchedulerContextKey" value="applicationContextKey"/>
        <property name="quartzProperties">
            <props>
                <prop key="org.quartz.scheduler.instanceName">TCQuartzScheduler</prop>
                <prop key="org.quartz.scheduler.instanceId">AUTO</prop>
                <prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
                <prop key="org.quartz.threadPool.threadCount">8</prop>
                <prop key="org.quartz.threadPool.threadPriority">5</prop>
                <prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
            </props>
        </property>
        <!--启动job-->
        <property name="triggers">
            <list>
                <!--<ref bean="wechatCronTrigger"/>-->
            </list>
        </property>

        <property name="globalJobListeners">
            <list>
                <ref bean="myJobListener"/>
            </list>
        </property>

        <property name="globalTriggerListeners">
            <list>
                <ref bean="myTriggerListener"/>
            </list>
        </property>

        <property name="schedulerListeners">
            <list>
                <ref bean="mySchedulerListener"/>
            </list>
        </property>

        <property name="jobFactory">
            <bean class="docren.com.biz.infrastructure.MyJobFactory" />
        </property>

    </bean>

</beans>
