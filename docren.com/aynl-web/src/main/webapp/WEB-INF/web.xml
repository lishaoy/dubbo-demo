<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">
    <display-name>Archetype Created Web Application</display-name>

    <!-- 加载Log4J 配置文件  -->
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.xml</param-value>
    </context-param>

    <!--&lt;!&ndash; ========================单点登录开始 ======================== &ndash;&gt;-->
    <!--&lt;!&ndash;用于单点退出，该过滤器用于实现单点登出功能，可选配置 &ndash;&gt;-->
    <!--<listener>-->
    <!--<listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>-->
    <!--</listener>-->

    <!--<filter>-->
    <!--<filter-name>CAS Single Sign Out Filter</filter-name>-->
    <!--<filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>-->
    <!--<init-param>-->
    <!--<param-name>casServerUrlPrefix</param-name>-->
    <!--&lt;!&ndash; 此处配置的是 cas server 地址 &ndash;&gt;-->
    <!--<param-value>https://localhost/cas</param-value>-->
    <!--</init-param>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
    <!--<filter-name>CAS Single Sign Out Filter</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->

    <!--<filter>-->
    <!--<filter-name>CAS Authentication Filter</filter-name>-->
    <!--<filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>-->
    <!--<init-param>-->
    <!--<param-name>casServerLoginUrl</param-name>-->
    <!--&lt;!&ndash; 此处配置的是 cas server 登录地址 &ndash;&gt;-->
    <!--<param-value>https://localhost/cas</param-value>-->
    <!--</init-param>-->
    <!--<init-param>-->
    <!--<param-name>serverName</param-name>-->
    <!--&lt;!&ndash; 此处配置的是当前项目地址, 且必须使用 https 服务, 否则 cas server 无法认证 &ndash;&gt;-->
    <!--<param-value>https://localhost/medicen</param-value>-->
    <!--</init-param>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
    <!--<filter-name>CAS Authentication Filter</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->
    <!--<filter>-->
    <!--<filter-name>CAS Validation Filter</filter-name>-->
    <!--<filter-class>org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>-->
    <!--<init-param>-->
    <!--<param-name>casServerUrlPrefix</param-name>-->
    <!--&lt;!&ndash; 此处配置的是 cas server 地址 &ndash;&gt;-->
    <!--<param-value>https://localhost/cas</param-value>-->
    <!--</init-param>-->
    <!--<init-param>-->
    <!--<param-name>serverName</param-name>-->
    <!--&lt;!&ndash; 此处配置的是当前项目地址, 且必须使用 https 服务, 否则 cas server 无法认证 &ndash;&gt;-->
    <!--<param-value>https://localhost/medicen</param-value>-->
    <!--</init-param>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
    <!--<filter-name>CAS Validation Filter</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->
    <!--<filter>-->
    <!--<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>-->
    <!--<filter-class>org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
    <!--<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->
    <!--<filter>-->
    <!--<filter-name>CAS Assertion Thread Local Filter</filter-name>-->
    <!--<filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
    <!--<filter-name>CAS Assertion Thread Local Filter</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->
    <!--&lt;!&ndash; ========================单点登录结束 ======================== &ndash;&gt;-->

    <!-- 编码过滤器 -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <async-supported>true</async-supported>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!--<filter>-->
    <!--<filter-name>baseUrlFilter</filter-name>-->
    <!--<filter-class>apc.dubbo.mypharma.http.act.comm.util.filter.BaseUrlFilter</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
    <!--<filter-name>baseUrlFilter</filter-name>-->
    <!--<url-pattern>*</url-pattern>-->
    <!--</filter-mapping>-->


    <!-- Spring MVC servlet -->
    <servlet>
        <servlet-name>SpringMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
        <!--<async-supported>true</async-supported>-->
    </servlet>
    <!--跨域配置-->
    <filter>
        <filter-name>CORS</filter-name>
        <filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class>

        <!--<init-param>-->
        <!--<param-name>test</param-name>-->
        <!--<param-value>http://www.test.wdyy.com.cn/</param-value>-->
        <!--</init-param>-->

        <!--<init-param>-->
        <!--<param-name>prev</param-name>-->
        <!--<param-value>http://www.prev.wdyy.com.cn/</param-value>-->
        <!--</init-param>-->

        <init-param>
            <param-name>*</param-name>
            <param-value>*/</param-value>
        </init-param>
        <init-param>
            <param-name>*.supportedMethods</param-name>
            <param-value>GET, POST, HEAD, PUT, DELETE</param-value>
        </init-param>
        <init-param>
            <param-name>*.supportedHeaders</param-name>
            <param-value>Accept, Origin, X-Requested-With, Content-Type, Last-Modified</param-value>
        </init-param>
        <init-param>
            <param-name>*.exposedHeaders</param-name>
            <param-value>Set-Cookie</param-value>
        </init-param>
        <init-param>
            <param-name>*.supportsCredentials</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CORS</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <servlet-mapping>
        <servlet-name>SpringMVC</servlet-name>
        <!-- 此处可以可以配置成*.do，对应struts的后缀习惯 -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!--&lt;!&ndash; 页面路径过滤器 &ndash;&gt;-->
    <!--<filter>-->
    <!--<filter-name>simpleCORSFilter</filter-name>-->
    <!--<filter-class>apc.dubbo.mypharma.http.act.comm.util.filter.SimpleCORSFilter</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
    <!--<filter-name>simpleCORSFilter</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->
    <!--&lt;!&ndash;自定义跨域拦截&ndash;&gt;-->
    <!--<filter>-->
    <!--<filter-name>simpleCorsFilter</filter-name>-->
    <!--<filter-class>apc.dubbo.mypharma.http.act.comm.util.filter.SimpleCORSFilter</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
    <!--<filter-name>simpleCorsFilter</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->
</web-app>